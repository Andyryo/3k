■　goコマンドの拡張


	go depth 6
	depth指定での思考。
	
	go nodes 10000
	探索node数を指定しての思考。あまり厳密に守るわけではない。(探索ノード数をチェックする間隔が甘いので厳密に守れない)

	注意)
		depthとnodesは、USIプロトコルの原案となったUCIプロトコルには存在する。
		将棋所は対応しておらず。ShogiGUIでは対応しているはず。

	go rtime 100
	とすると、今回の思考時間として、100～300[ms]を使って思考する。
	自己対局でレーティングを計測するときに指し手をバラけさせる効果がある…と思って用意したが、
	いまとなっては使っていない。

	perft [depth] :パフォーマンステスト。現在の局面(positionコマンドで与えられる)から深さdepthまで
		全合法手で進めるときの総node数を数えあげる。depthとして1以上の値を指定すること。
		position～goコマンドと組み合わせて使う。
		例)
			perft 10
			position startpos
			go


■　USI拡張コマンド


	d       : Debug デバッグ用に現在の局面を表示する。
	compiler: コンパイルに使用したコンパイラ情報が表示される。
	eval    : 現在の局面に対して評価関数を呼び出して評価値を出力する。
	moves   : 現在の局面の合法手(LEGAL_ALL)をすべて出力する。
	side    : 現在の局面の手番を返す(先手 = "black" , 後手 = "white")
	sfen    : "position sfen"の略。"d"コマンドで表示されたsfen文字列をコピペするときに便利。
	key	: 現在の局面に対して局面のhash keyを出力
	mated   : 現在の局面に対して詰み判定を呼び出す。詰んでいれば1。さもなくば0。

	bench   : ベンチマーク
		bench [→の指定][局面の指定][LimitType = depth , nodes, time]
		例)
			bench 7 default depth
			※　パラメーター省略時は上記の設定
		
		[局面の指定]について
		  "default"=デフォルトの局面、"current"=現在の局面

	test    : テスト用コマンド
		test rp    [回数]    : random playerのテスト。回数を指定できる。

	log		: ログファイル("io_log.txt")に標準入出力を書き出す設定。Write Debug Logでon/offも出来る。

